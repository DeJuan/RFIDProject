<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>SerialReader Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="8b45eb30-9733-2ce3-a1fd-3c7adac3124b" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:ThingMagic.SerialReader" /><MSHelp:Keyword Index="A" Term="T:ThingMagic.SerialReader" /><MSHelp:Keyword Index="A" Term="frlrfThingMagicSerialReaderClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfThingMagicSerialReaderMembersTopic" /><MSHelp:Keyword Index="K" Term="SerialReader class" /><MSHelp:Keyword Index="K" Term="ThingMagic.SerialReader class" /><MSHelp:Keyword Index="F" Term="SerialReader" /><MSHelp:Keyword Index="F" Term="ThingMagic.SerialReader" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="MercuryAPI.dll" /><MSHelp:Attr Name="APIName" Value="ThingMagic.SerialReader" /><MSHelp:Attr Name="Locale" Value="en-us" /></xml></head><body><div id="control"><span class="productTitle">Mercury API</span><br /><span class="topicTitle">SerialReader Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="d4648875-d41a-783b-d5f4-638df39ee413.htm">Namespaces</a> ► <a href="3af3f7df-e311-4e3f-9388-449f848a997b.htm">ThingMagic</a> ► <span class="selflink">SerialReader</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary">
            The SerialReader class is an implementation of a Reader object
            that communicates with a ThingMagic embedded RFID module via the embedded module serial protocol. 
            In addition to the Reader interface, direct access to the commands of the embedded module 
            serial protocol is supported.
            
            
            Instances of the SerialReader class are created with the {@link
            #com.thingmagic.Reader.create} method with a "eapi" URI or a
            generic "tmr" URI that references a local serial port.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre>
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">SerialReader</span> : <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a></pre></div><div class="code" x-lang="VisualBasic"><pre>
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">SerialReader</span> _
	<span class="keyword">Inherits</span> <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre>
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SerialReader</span> <span class="keyword">sealed</span> : <span class="keyword">public</span> <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="constructor" onclick="toggleClass('memberTabs','value','constructor','activeTab','tab'); processSubgroup('constructor','member');processList('memberList','filterElement','member');">Constructors</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td><td class="tab" value="field" onclick="toggleClass('memberTabs','value','field','activeTab','tab'); processSubgroup('field','member'); processList('memberList','filterElement','member');">Fields</td><td class="tab" value="event" onclick="toggleClass('memberTabs','value','event','activeTab','tab'); processSubgroup('event','member'); processList('memberList','filterElement','member');">Events</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4dd3f110-aabf-3291-cc31-05504affe77e.htm">SerialReader(String)</a></td><td><div class="summary">
            Make a serial reader with default transport
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ee86c0ad-6a3d-63d5-24b7-3f6b5cf7726c.htm">SerialReader(String, SerialTransport)</a></td><td><div class="summary">
            Connect to a reader
            </div><br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="830c087f-b0ca-18d6-5af8-c37c1af10d17.htm">_exitNow</a></td><td><div class="summary">
            Internal flag to "close reader."
            If true, quit worker thread.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="eaa91a9f-36fc-1179-4c5f-f2a623cc7c17.htm">_runNow</a></td><td><div class="summary">
            Internal flag to enable "tag reading."
            If true, generate tag reads.  If false, stop "reading tags."
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="field; public; instance; declared"><td><img src="../icons/pubfield.gif" /></td><td><a href="88681280-1b2e-c3bb-8147-48b984837b69.htm">allMeta</a></td><td><div class="summary">
            Metadata flags
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="06456d25-2f72-e9c9-da72-896e0ec8b07d.htm">CmdAntennaDetect<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Enumerate the logical antenna ports and report the antenna
            detection status of each one.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f794d02c-d244-9ee4-fe09-815015991a0e.htm">CmdAuthReqResponse(UInt32)</a></td><td><div class="summary">
            Send new message to tag with secure accesspassword corresponding with tag epc 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="eceec125-1a25-c410-030b-dcd163c56770.htm">CmdBlockPermaLock(UInt16, Byte, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, Byte, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>UInt16<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            BlockPermaLock
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3aead13f-bdca-091f-3970-699b5d9af04c.htm">CmdBlockWrite(UInt16, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, Byte, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>UInt16<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            BlockWrite command
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1dcf2f81-f14b-7bed-ed97-0494528fed70.htm">CmdBootBootloader<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Quit running the application and execute the bootloader. Note
            that this changes the reader's baud rate to 9600; the user is
            responsible for changing the local serial sort speed.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6dde3fcf-a75e-716e-1f96-966330d80483.htm">CmdBootFirmware<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Tell the boot loader to verify the application firmware and execute it.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6f00b37a-6f39-9243-f28d-ea0371982128.htm">CmdClearTagBuffer<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Clear the tag buffer.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c4c85670-2142-5ef3-67da-be39487217fd.htm">CmdEraseFlash(Byte, UInt32)</a></td><td><div class="summary">
            Erase a sector of the device's flash.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3051c218-5e63-6699-e156-ae9063b835f3.htm">CmdGen2LockTag(UInt16, UInt16, UInt16, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Lock a Gen2 tag 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5693d96b-61e1-453b-1fc7-a8247c962ec7.htm">CmdGen2ReadTagData(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>TagMetadataFlag, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, Byte, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Read the memory of a Gen2 tag.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e9e34cf3-18a3-462e-7536-d3e4f24f630e.htm">CmdGen2WriteTagData(UInt16, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Write data to a Gen2 tag.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e9738eff-68d9-453f-804e-6f24fbab31a5.htm">CmdGetAntennaConfiguration<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the current Tx and Rx antenna port, the number of physical
            ports, and a list of ports where an antenna has been detected.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1d6d7961-56d8-0e88-5704-5555943bf725.htm">CmdGetAntennaPortPowers<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the transmit powers of each antenna port.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="54a5bc59-28eb-b841-b95c-e892cafee6c4.htm">CmdGetAntennaPortPowersAndSettlingTime<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the transmit powers and settling time of each antenna port.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="19f1f066-894a-bb61-025f-9af2e7dc2d71.htm">CmdGetAntennaReturnLoss<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the antenna return loss of logical antenna ports.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c4f3b31b-082e-1f49-5aa0-d2e671ee189c.htm">CmdGetAntennaSearchList<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the search list of logical antenna ports.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8e784218-3524-0d2d-26ea-5e90315100f2.htm">CmdGetAvailableProtocols<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the list of RFID protocols supported by the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3b00adf3-2e20-38a7-84d1-da7cfaaa937c.htm">CmdGetAvailableRegions<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the list of regulatory regions supported by the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="52f3d302-b1a1-2400-63fe-993435416aba.htm">CmdGetCurrentProgram<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Return the identity of the program currently running on the
            device (bootloader or application).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="eee71462-d5db-02b0-207b-76eff5197ec8.htm">CmdGetFrequencyHopTable<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the frequencies in the current hop table
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b1321159-a5be-0e4d-91d1-e23681a7776a.htm">CmdGetFrequencyHopTime<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the interval between frequency hops.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ff4fc229-0ca8-7cf2-2803-25a4529d03d1.htm">CmdGetGen2WriteResponseWaitTime<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Parse get gen2 writeresponse wait time response
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="73d31a5a-ec17-a1c1-d29a-3f2a79f93d5d.htm">CmdGetGpio<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Gets the state of the device's GPIO pins.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e91e46de-9f34-d942-0719-472212479cd4.htm">CmdGetGPIODirection(Int32)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
             Get direction of a single GPIO pin
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="829b0117-6065-86ac-2b4a-899ce002725d.htm">CmdGetHardwareVersion(Byte, Byte)</a></td><td><div class="summary">
            Get a block of hardware version information. This information is
            an opaque data block.        
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f23cc8e9-a1a4-dc3b-2978-4a785772bac7.htm">CmdGetPowerMode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the current power mode of the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ae4510b9-949c-1655-6f17-17b2ffa809c6.htm">CmdGetProtocol<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the current RFID protocol the device is configured to use.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c323a402-1707-d250-0efd-7458a3a85ae6.htm">CmdGetProtocolConfiguration(TagProtocol, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ProtocolConfiguration)</a></td><td><div class="summary">
            Gets the value of a protocol configuration setting.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="561d19f4-7bd7-9986-d345-386406ba218a.htm">CmdGetReadTxPower<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the current global Tx power setting for read operations.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ef133fdc-b8d1-2cad-25ce-b8bba834faf3.htm">CmdGetReadTxPowerWithLimits<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the current global Tx power setting for read operations, and the
            minimum and maximum power levels supported.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f638b8db-d993-ae8a-3066-a2bf28c1deb6.htm">CmdGetRegion<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the current region the device is configured to use.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d2f74913-c55a-1a8f-ed73-5dc599505869.htm">CmdGetRegionConfiguration(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>RegionConfiguration)</a></td><td><div class="summary">
            Get the value of a region-specific configuration setting.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="590e0d0c-408c-3d5a-3d30-047ff133ec1d.htm">CmdGetSectorSize(Byte)</a></td><td><div class="summary">
            Return the size of a flash sector of the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d6a53cca-10b8-2408-6acb-1e3ec94205b3.htm">CmdGetSerialNumber<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get reader serial number       
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="165d9288-be56-a106-78b0-16c310c6fd50.htm">CmdGetTagBuffer(UInt16, Boolean, TagProtocol)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Get tag data of a number of tags from the tag buffer. This command moves a read index into the tag buffer, so that repeated calls will fetch all of the tags in the buffer. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d3a22593-5c1a-82a3-7a9b-5458728429fe.htm">CmdGetTagBuffer(UInt16, UInt16, Boolean, TagProtocol)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Get tag data of a tags from certain locations in the tag buffer, without updating the read index. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="81f403e8-6c05-1350-ef98-caaa0138abe9.htm">CmdGetTagBuffer(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>TagMetadataFlag, Boolean, TagProtocol)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Get tag data and associated read metadata from the tag buffer.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="ebb0fdb8-4e45-e9d6-019b-9856d404b451.htm">CmdGetTagsRemaining<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Get the number of tags stored in the tag buffer
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="287b1ef1-a5c1-f005-0906-5375fc71e6ab.htm">CmdGetTemperature<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the current temperature of the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a5fa4fa2-5923-2bda-88ed-7b9bd290d882.htm">CmdGetTxRxPorts<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the currently set Tx and Rx antenna port.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a4b6325d-7860-214c-8b32-1346a5e5f421.htm">CmdGetUserMode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Gets the current user mode of the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="54fa659b-85cf-72c9-8387-d5d8b72e4d6b.htm">cmdGetUserProfile(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Get the configurations from flash.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="da71af18-54df-8bde-345f-bc91da70db68.htm">CmdGetWriteTxPower<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the current global Tx power setting for write operations.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="182ef00d-1db7-d463-505a-ab27dcf34d9f.htm">CmdGetWriteTxPowerWithLimits<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the current global Tx power setting for write operations, and the
            minimum and maximum power levels supported.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9ebc1f99-feff-b3be-fc8c-97d2743bd0fb.htm">CmdHibikiBlockLock(UInt16, UInt32, Byte, UInt32, Byte, Byte)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Send the Hitachi Hibiki Block Lock command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3d346ebd-6e73-028a-5b34-682991e1a01e.htm">CmdHibikiBlockReadLock(UInt16, UInt32, Byte, UInt32, Byte, Byte)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Send the Hitachi Hibiki Block Read Lock command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="93a7e9e7-c9a5-8c1c-00e4-73c2c325d6d7.htm">CmdHibikiGetSystemInformation(UInt16, UInt32)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Send the Hitachi Hibiki Get System Information command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="63e88617-e2d4-4a3c-700b-d180614fc3c6.htm">CmdHibikiReadLock(UInt16, UInt32, Byte, Byte)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Send the Hitachi Hibiki Read Lock command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fc145ae2-7473-1c77-cb86-8bbedf5274d2.htm">CmdHibikiSetAttenuate(UInt16, UInt32, Byte, Byte)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Send the Hitachi Hibiki Set Attenuate command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="20f4c13f-ebe6-eb58-cdd7-81ab1ebcb51b.htm">CmdHibikiWriteMultipleWords(UInt16, UInt32, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Send the Hitachi Hibiki Write Multiple Words Lock command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e415cb80-c47c-a631-da10-d4c8e766f31c.htm">CmdIso180006bLockTag(UInt16, Byte, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Lock a byte of memory on an ISO180006B tag 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d8ec927c-2b23-237a-e68d-e2e0fd97d46e.htm">CmdIso180006bReadTagData(UInt16, Byte, Byte, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Read the memory of an ISO180006B tag.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="86c0e4eb-a93a-f9d2-ca2a-7fd6c4e3b2af.htm">CmdIso180006bWriteTagData(UInt16, Byte, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Write data to an ISO180006B tag.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="806abfcf-dbb5-ad16-d9a0-c4857a21c2e3.htm">CmdKillTag(UInt16, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Kill a Gen2 tag.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d9e3bba3-9cf9-2a04-183f-c0e175fe8b8c.htm">CmdModifyFlash(Byte, UInt32, UInt32, Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Int32)</a></td><td><div class="summary">
            Write data to the device's flash, erasing if necessary.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="11cbaca4-1f2a-0598-1ac9-8450b490a67d.htm">CmdMultiProtocolSearch(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>CmdOpcode, List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>SimpleReadPlan<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>TagMetadataFlag, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>AntennaSelection, UInt16)</a></td><td><div class="summary">
            lv3 command supporting multiple protocol search
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4b49dfba-cd8e-8017-750a-a9f33a795f42.htm">CmdRaw(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Send a raw message to the serial reader.@throws ReaderCommException in the event of a timeout (failure torecieve a complete message in the specified time) or a CRC error.Does not generate exceptions for non-zero status responses.This function not intended for general use.If you really need to use raw reader commands, see the source for further instructions.
             </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9ae4e6a1-1c86-1ecf-de66-0652449bdec1.htm">CmdReadFlash(Byte, UInt32, Byte)</a></td><td><div class="summary">
            Read the contents of flash from the specified address in the specified flash sector.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0bd8eee4-8a96-a40f-4722-f02e75e388e8.htm">CmdReadTagAndDataReadMultiple(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>AntennaSelection, TagFilter, UInt32, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, Byte)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Search for tags for a specified amount of time and read data from each one.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c8ae5465-9992-3d30-3f61-0d904b57e1c8.htm">CmdReadTagAndDataWriteMultiple(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>AntennaSelection, TagFilter, UInt32, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Search for tags for a specified amount of time and write data to each one.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b21fe112-4ec8-f8ee-26c1-5e5c83e70881.htm">CmdReadTagAndKillMultiple(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>AntennaSelection, TagFilter, UInt32, UInt32)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Search for tags for a specified amount of time and kill each one.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="578e8daf-6723-0b88-1f42-48390c8e6886.htm">CmdReadTagAndLockMultiple(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>AntennaSelection, TagFilter, UInt32, UInt16, UInt16)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Search for tags for a specified amount of time and lock each one.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4659a1ff-8d37-fb44-94d1-98d70d8a71ad.htm">CmdReadTagMultiple(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>AntennaSelection, TagFilter, TagProtocol)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Search for tags for a specified amount of time.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d6ff3758-cd81-69b8-ca2d-f55bacb6f19c.htm">CmdReadTagSingle(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>TagMetadataFlag, TagFilter, TagProtocol)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Search for a single tag for up to a specified amount of time.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5c626420-e3e6-7d6a-6cfd-aedeb2dbb3fb.htm">CmdResetReaderStatistics(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ReaderStatisticsFlag)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Reset the per-port statistics.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7bfaa039-7e57-5c41-0b79-3469878e33fc.htm">CmdSetAntennaPortPowers(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span><span class="languageSpecificText"><span class="cpp">array&lt;</span></span>UInt16<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Sets the transmit powers of each antenna port. Note that setting
            a power level to 0 will cause the corresponding global power
            level to be used. Port numbers range from 1-255; power levels
            range from 0-65535.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b70d9ff5-d584-efe0-b2de-00d2710023f4.htm">CmdSetAntennaPortPowersAndSettlingTime(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span><span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int16<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Sets the transmit powers and settling times of each antenna
            port. Note that setting a power level to 0 will cause the
            corresponding global power level to be used. Port numbers range
            from 1-255; power levels range from 0-65535; settling time ranges
            from 0-65535.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="042e8c73-b4e1-e63c-239a-bfe5bb6085ab.htm">CmdSetAntennaSearchList(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span><span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Sets the search list of logical antenna ports. Port numbers range
            from 1-255.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fdbfa81a-0ff0-f3e0-7d9e-edc44d96344c.htm">CmdSetBaudRate(UInt32)</a></td><td><div class="summary">
            Tell the device to change the baud rate it uses for
            communication. Note that this does not affect the host side of
            the serial interface; it will need to be changed separately.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5b04fb2c-0f2f-0c3f-66a0-8026cc18e607.htm">CmdSetFrequencyHopTable(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>UInt32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Set the frequency hop table.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4d16e746-90d3-8881-c1ba-553858bd6e75.htm">CmdSetFrequencyHopTime(UInt32)</a></td><td><div class="summary">
            Set the interval between frequency hops. The valid range for this
            interval is region-dependent.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="082c64e6-dbe5-4d7d-2b47-1c17e4755a89.htm">CmdSetGen2WriteResponseWaitTime(Object, Object)</a></td><td><div class="summary">
            Set gen2 writeresponse wait time
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="82622d49-1198-4fdd-34a5-1128099668b8.htm">CmdSetGpio(Byte, Boolean)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Set the state of a single GPIO pin
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fb67c25e-ae36-c747-7d24-882983896e16.htm">CmdSetGPIODirection(Int32, Boolean)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
             Set direction of a single GPIO pin
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="195cd3b4-eeb4-d718-7bb0-68345ca1b2c7.htm">CmdSetPowerMode(Reader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>PowerMode)</a></td><td><div class="summary">
            Set the current power mode of the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="fcf56d89-7291-26b9-dfa9-ef89b6760ca5.htm">CmdSetProtocol(TagProtocol)</a></td><td><div class="summary">
            Set the current RFID protocol for the device to use.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3a83d991-913b-b3bb-4015-318e07f4ac1e.htm">CmdSetProtocolConfiguration(TagProtocol, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ProtocolConfiguration, Object)</a></td><td><div class="summary">
            Set Protocol Configuration.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d5967fc2-491f-e2ed-7067-a64292af89fa.htm">CmdSetProtocolLicenseKey(ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            set protocol license key
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="df48c382-e1f7-9547-d898-79334827aca4.htm">CmdSetProtocolLicenseKey(ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>SetProtocolLicenseOption)</a></td><td><div class="summary">
            set protocol license key
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d8627882-89d1-4974-2c1a-3b349028701f.htm">CmdSetReaderConfiguration(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Configuration, Object)</a></td><td><div class="summary">
            Sets the value of a device configuration setting.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="faaab168-0446-add8-0114-1d470fe94715.htm">CmdSetReadTxPower(Int16)</a></td><td><div class="summary">
            Set the current global Tx power setting for read operations.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7eedd37b-ab2b-cac3-6925-c25562a1386d.htm">CmdSetRegion(Reader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Region)</a></td><td><div class="summary">
            Set the current regulatory region for the device. Resets region-specific 
            configuration, such as the frequency hop table.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8862d89e-ab54-4bdf-f723-91aae199be06.htm">CmdSetRegionLbt(Reader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Region, Boolean)</a></td><td><div class="summary">
            Set the current regulatory region for the device.
            Resets region-specific configuration, such as the frequency hop table.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="51c7f897-bb43-584f-4a4d-0370b6670161.htm">CmdSetTxRxPorts(Int32, Int32)</a></td><td><div class="summary">
            Sets the Tx and Rx antenna port. Port numbers range from 1-255.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="389e2258-fd13-21cf-5980-0209ec99479c.htm">CmdSetUserMode(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>UserMode)</a></td><td><div class="summary">
            Set the current user mode of the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="37268701-6b4f-af85-140e-6e13a636e05a.htm">CmdSetUserProfile(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>UserConfigOperation, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>UserConfigCategory, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>UserConfigType)</a></td><td><div class="summary">
            Save/Restore/Verify/Clear the configurations.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7b85228c-ba70-42d9-dbcc-e90bd68f743f.htm">CmdSetWriteTxPower(Int16)</a></td><td><div class="summary">
            Set the current global Tx power setting for write operations.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="706dcf73-fc24-ae1e-2a0f-2d3ea7d837ff.htm">CmdTestSendCw(Boolean)</a></td><td><div class="summary">
            Turn CW transmission on or off. Testing command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5f468c04-f214-e803-8205-897112ee23e7.htm">CmdTestSendPrbs(UInt16)</a></td><td><div class="summary">
            Turn on pseudo-random bit _stream transmission for a particular duration.  
            Testing command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9ec287d0-2519-58ac-ed32-aa4e83e0e0be.htm">CmdTestSetFrequency(UInt32)</a></td><td><div class="summary">
            Set the operating frequency of the device. Testing command.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c073ba78-a574-e625-f590-599b52fd200f.htm">CmdVerifyImage<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Verify that the application image in flash has a valid checksum.
            The device will report an invalid checksum with a error code
            response, which would normally generate a ReaderCodeException;
            this routine traps that particular exception and simply returns
            "false".
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9668a565-fe5d-815d-5b57-478b352ea97f.htm">CmdVersion<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the version information about the device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="93199594-f78b-2b42-3a86-2d4e0cad05ef.htm">CmdWriteFlash(Byte, UInt32, UInt32, Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Int32)</a></td><td><div class="summary">
            Write data to a previously erased region of the device's flash.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6f156770-e092-9e58-cd86-e2e7157871f5.htm">CmdWriteTagEpc(UInt16, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Boolean)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Write the EPC of a tag and update the PC bits. Behavior is
            unspecified if more than one tag can be found.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7106d153-2216-4c7f-00d3-01bab6aa1535.htm">CmdWriteTagEpc(UInt16, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Boolean, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Write the EPC of a tag and update the PC bits. Behavior is
            unspecified if more than one tag can be found.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cd1cb119-b1c4-733b-8428-a378dcf94e97.htm">Connect<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Connect reader object to device.
            If object already connected, then do nothing.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="ee7573ca-8aae-8896-5677-e4cc6466847e.htm">Connect<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="9a28a17c-9898-e009-47e2-a55f95a68594.htm">DebugMode(Int32)</a></td><td><div class="summary">
            Select debugging level
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="88ecc5df-619e-b840-5dfc-c2e4fde1801b.htm">Destroy<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Shuts down the connection with the reader device.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="fa6f2430-0a77-1fa8-7cce-ebd93cbec9b0.htm">Destroy<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="3d2dcb32-b206-0bcb-17ee-ea87d2b68546.htm">DestroyGivenRead<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Clean up actions given a working Read method
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="124d5145-6c82-0200-07f7-b0b1827ab6f3.htm">Dispose(Boolean)</a></td><td><div class="summary">
            Dispose
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3d8e9b6f-e2ce-4b90-3452-c0e63b4c7279.htm">Dispose<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Dispose
            </div> (Inherited from <a href="ad285ce5-64ed-2426-185c-bcc332ca509a.htm">Disposable</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="eedbdf6d-2550-b660-3e4e-22f256f05bf2.htm">DoWorkGivenRead<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Logic for asynchronous worker thread given a working Read method
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals(Object)</a></td><td><div class="summary">
                    Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.
                </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a672130f-1764-2a03-3c9a-9839c9328bab.htm">executeEmbeddedRead(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, UInt16)</a></td><td><div class="summary">
            Execute the embedded command
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="71f0d651-2715-beb6-e54b-7349e4539cc3.htm">ExecuteTagOp(TagOp, TagFilter)</a></td><td><div class="summary">
             execute a TagOp
             </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="d2e828d3-35d9-2a73-31ba-3694f04b1f06.htm">ExecuteTagOp(TagOp, TagFilter)</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="8cc545a7-ba6e-2a01-4bf3-bf17a23e0a37.htm">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Finalizer
            </div> (Inherited from <a href="ad285ce5-64ed-2426-185c-bcc332ca509a.htm">Disposable</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0b03b08e-4df5-7ad5-48e6-28a1b7aba6da.htm">FirmwareLoad(Stream)</a></td><td><div class="summary">
            Load a new firmware image into the device's nonvolatile memory.
            This installs the given image data onto the device and restarts
            it with that image. The firmware must be of an appropriate type
            for the device. Interrupting this operation may damage the
            reader.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="e26f41dc-fa30-b7da-7eaf-13a489122093.htm">FirmwareLoad(Stream)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c9279ba2-9079-001d-6ecc-dde29879f283.htm">FirmwareLoad(Stream, FirmwareLoadOptions)</a></td><td><div class="summary">
            Loads firmware on the Reader.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="f8d53867-3a1a-6bbc-5e71-81d20d3b643c.htm">FirmwareLoad(Stream, FirmwareLoadOptions)</a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="b43b9c2d-ae52-10ff-b2cb-9310f6bf8a33.htm">FromSL900aTime(UInt32)</a></td><td><div class="summary">
            Convert SL900A time to DateTime
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="7910a2d8-c157-4478-24cb-693ea473d1c3.htm">GetFirstConnectedAntenna<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Pick first available connected antenna
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="d2c09c4c-2cba-186e-0412-4aa16cc0e7bc.htm">GetFirstSupportedProtocol<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Pick first available supported protocol
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="28debd4c-6e6c-79c6-d810-5c6d57522c34.htm">getGPIODirection(Boolean)</a></td><td><div class="summary">
            Get directions of all GPIO pins
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
                    Serves as a hash function for a particular type. 
                </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5ef07036-e950-d377-fd70-d49ee95d0959.htm">GetTagReads(Int32, TagProtocol)</a></td><td><div class="summary">
            Fetch tag reads from buffer using as many commands as necessary (not limited by capacity of a single command)
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
                    Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.
                </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5dd7a7d2-d53c-7e6b-8b0c-6080ad9880a4.htm">GpiGet<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the state of all of the reader's GPI pins. 
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="0e5db500-d3ab-88b2-ebda-764c9a330671.htm">GpiGet<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d5d63c5e-ee1f-e313-9b0e-850623e6d377.htm">GpoSet(ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>GpioPin<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Set the state of some GPO pins.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="e3ca0f7a-0d4f-55d7-52a1-90d2d1d61f5c.htm">GpoSet(ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>GpioPin<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="10b3a5fa-13c1-88af-1ff3-febc095ffc17.htm">isFastSearch</a></td><td><div class="summary">
            Fast search enable 
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c0c85bba-c370-d3f5-fd34-1ac697b8391c.htm">KillTag(TagFilter, TagAuthentication)</a></td><td><div class="summary">
            Kill a tag. The first tag seen is killed.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="03bfd338-7c00-0e6a-3906-1d70cf59efb5.htm">KillTag(TagFilter, TagAuthentication)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="622fcade-98b5-a61d-df71-6ffe1fd54676.htm">LockTag(TagFilter, TagLockAction)</a></td><td><div class="summary">
            Perform a lock or unlock operation on a tag. The first tag seen
            is operated on - the singulation parameter may be used to control
            this. Note that a tag without an access password set may not
            accept a lock operation or remain locked.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="0ff664fd-8918-e339-54e9-4e1ef0cdcd9e.htm">LockTag(TagFilter, TagLockAction)</a>.)<br /></td></tr><tr data="event; public; instance; inherited"><td><img src="../icons/pubevent.gif" /></td><td><a href="305d353a-621a-fe3a-139b-dd4546c1d79e.htm">Log</a></td><td><div class="summary">
            Occurs when debug log message is generated
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
                    Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.
                </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e762eb78-947f-4a9b-cf2b-16ca48914b31.htm">msgAddGEN2BlockPermaLock(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, UInt16, Byte, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, Byte, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>UInt16<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            BlockPermaLock
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e2978fa4-9247-8cd9-f59f-81f6d43d304a.htm">msgAddGEN2BlockWrite(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, UInt16, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>UInt16<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, UInt32, TagFilter)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            assemble the embedded command for BlockWrite
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f2e8c232-99ae-ba4c-f12a-e425db954fea.htm">msgAddGEN2DataRead(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, UInt16, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, Byte, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>SecureTagType)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Assemble the embedded command for DataRead
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="178a343c-2cd4-7c41-c7f7-066603fe8b97.htm">msgAddGEN2DataWrite(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, UInt16, Gen2<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Bank, UInt32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>UInt16<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Assemble the embedded command for DataWrite
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3a58249b-6448-e772-263f-1016496b6592.htm">msgAddGEN2KillTag(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, UInt16, UInt32)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Assemble the embedded command for Kill
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f28bd422-03ee-a19d-f1aa-d4e6341c3455.htm">msgAddGEN2LockTag(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, UInt16, UInt32, UInt16, UInt16)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Assemble the embedded command for Lock
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2bf5ed62-a5de-926d-a64a-7308474bdaf4.htm">msgAddGEN2WriteTagEPC(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><span class="languageSpecificText"><span class="cpp">%</span></span>, UInt16, TagData)</a></td><td><div class="summary">
            WriteTagEpc
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="20a1d586-d25a-d857-0d0f-c1e6e7d3754f.htm">msgSetupReadTagMultiple(UInt16, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>AntennaSelection, TagFilter, TagProtocol, SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>TagMetadataFlag, Int32)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Assembly ReadTagMultiple Cmd bytes
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="576821ca-631f-ba95-266d-6bd4e72d28b7.htm">msgSetupReadTagSingle(SerialReader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>TagMetadataFlag, TagFilter, UInt16)</a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Assembly ReadTagSignle Cmd bytes
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="7ee52f1d-0d5e-c65b-062f-a51d9ae9df16.htm">notifyExceptionListeners(ReaderException)</a></td><td><div class="summary">
            Convenience method for delivering reader exceptions to listeners
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="afae4e46-eadd-9df9-26f7-b17ced6a2100.htm">OnLog(String)</a></td><td><div class="summary">
            Generate a debug log message
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="968333ec-51dc-aa22-60ef-6c3a9b725a43.htm">OnReadAuthentication(TagReadData)</a></td><td><div class="summary">
            Reader Authentication message event.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="e99afb59-4135-b519-6ad4-98c522530b48.htm">OnStatsRead(ReaderStatsReport)</a></td><td><div class="summary">
            Reader Stats message event
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="fff6e6fb-98c6-2247-8595-b962248ac6ba.htm">OnStatusRead(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>StatusReport<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
            Reader Status message event
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="9c8ad6b9-cbe2-66b3-6208-390e43138dea.htm">OnTagRead(TagReadData)</a></td><td><div class="summary">
            Internal accessor to TagRead event.
            Called by members of the Reader class to fire a TagRead event.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="17c1b4dc-3880-d9a0-30c6-05d5bd0a06d1.htm">OnTransport(Boolean, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Int32)</a></td><td><div class="summary">
            Fire Transport message event
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="45feecff-3561-5867-157e-5323f907a83d.htm">OpenSerialPort(String)</a></td><td><div class="summary">
            Initializes Reader Serial Port.
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="d9bcdd89-e97c-b529-a1f1-323b3fb9ea75.htm">ParamAdd(Reader<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Setting)</a></td><td><div class="summary">
            Register a new parameter handler
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="3a90390e-b728-50fc-6a58-e16fc529ff7b.htm">ParamClear<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
             Reset parameter table; e.g., to reprobe hardware afer firmware update
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e3eecde6-b048-bd30-0461-000e9891a052.htm">ParamGet(String)</a></td><td><div class="summary">
            Get the value of a Reader parameter.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b5c57002-621b-4f62-484a-2f32407499b9.htm">ParamList<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get a list of the parameters available
            
            <p>Supported Parameters:
            <ul><li>/reader/antenna/checkPort</li><li>/reader/antenna/connectedPortList</li><li>/reader/antenna/portList</li><li>/reader/antenna/portSwitchGpos</li><li>/reader/antenna/portSwitchGpos not supported</li><li>/reader/antenna/returnLoss</li><li>/reader/antenna/settlingTimeList</li><li>/reader/antenna/txRxMap</li><li>/reader/antennaMode</li><li>/reader/baudRate</li><li>/reader/commandTimeout</li><li>/reader/currentTime</li><li>/reader/description</li><li>/reader/extendedEpc</li><li>/reader/gen2/BLF</li><li>/reader/gen2/accessPassword</li><li>/reader/gen2/bap</li><li>/reader/gen2/q</li><li>/reader/gen2/session</li><li>/reader/gen2/tagEncoding</li><li>/reader/gen2/target</li><li>/reader/gen2/target not supported</li><li>/reader/gen2/tari</li><li>/reader/gen2/writeEarlyExit</li><li>/reader/gen2/writeMode</li><li>/reader/gen2/writeReplyTimeout</li><li>/reader/gpio/inputList</li><li>/reader/gpio/outputList</li><li>/reader/hostname</li><li>/reader/iso180006b/BLF</li><li>/reader/iso180006b/delimiter</li><li>/reader/iso180006b/modulationDepth</li><li>/reader/licenseKey</li><li>/reader/powerMode</li><li>/reader/radio/enablePowerSave</li><li>/reader/radio/enableSJC</li><li>/reader/radio/portReadPowerList</li><li>/reader/radio/portWritePowerList</li><li>/reader/radio/powerMax</li><li>/reader/radio/powerMin</li><li>/reader/radio/readPower</li><li>/reader/radio/temperature</li><li>/reader/radio/writePower</li><li>/reader/read/asyncOffTime</li><li>/reader/read/asyncOnTime</li><li>/reader/read/plan</li><li>/reader/region/hopTable</li><li>/reader/region/hopTime</li><li>/reader/region/id</li><li>/reader/region/lbt/enable</li><li>/reader/region/supportedRegions</li><li>/reader/statistics</li><li>/reader/stats</li><li>/reader/stats is not supported</li><li>/reader/stats/enable</li><li>/reader/stats/enable is not supported</li><li>/reader/status/antennaEnable</li><li>/reader/status/frequencyEnable</li><li>/reader/status/temperatureEnable</li><li>/reader/tagReadData/enableReadFilter</li><li>/reader/tagReadData/enableReadFilter read only</li><li>/reader/tagReadData/readFilterTimeout</li><li>/reader/tagReadData/recordHighestRssi</li><li>/reader/tagReadData/reportRssiInDbm</li><li>/reader/tagReadData/tagopFailures</li><li>/reader/tagReadData/tagopSuccesses</li><li>/reader/tagReadData/uniqueByAntenna</li><li>/reader/tagReadData/uniqueByData</li><li>/reader/tagReadData/uniqueByProtocol</li><li>/reader/tagop/antenna</li><li>/reader/tagop/protocol</li><li>/reader/transportTimeout</li><li>/reader/uri</li><li>/reader/userConfig</li><li>/reader/userMode</li><li>/reader/version/hardware</li><li>/reader/version/model</li><li>/reader/version/productGroup</li><li>/reader/version/productGroupID</li><li>/reader/version/productID</li><li>/reader/version/serial</li><li>/reader/version/software</li><li>/reader/version/supportedProtocols</li></ul></p></div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="06583105-73b0-d4ca-68fb-281ea586695b.htm">ParamSet(String, Object)</a></td><td><div class="summary">
            Set the value of a Reader parameter.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="f3295f34-383e-abb9-4008-54484d364ae8.htm">PortName</a></td><td><div class="summary">
            Name of serial port (for informational purposes only --
            Do not expose to user unless absolutely necessary)
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="160a4d3a-9a7a-3a80-2ef9-512d6571a9c4.htm">QueueTagReads(ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>TagReadData<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Submit tag reads for read listener background processing
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="63c7f8ef-6314-a695-d124-772f85e3bebb.htm">Read(Int32)</a></td><td><div class="summary">
            Read RFID tags for a fixed duration.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="c17139c0-34e3-90c0-2780-b9e02baecc48.htm">Read(Int32)</a>.)<br /></td></tr><tr data="event; public; instance; inherited"><td><img src="../icons/pubevent.gif" /></td><td><a href="2c3716b3-bf6c-824f-6b50-fca52f8ce8b9.htm">ReadAuthentication</a></td><td><div class="summary">
            Occurs when 0x604 error is received which indicates the api 
            is waiting for the client to provide the accesspassword of tag.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="event; public; instance; inherited"><td><img src="../icons/pubevent.gif" /></td><td><a href="d3f37f35-88ec-b9c0-1f9c-e9ec1ae8bb0f.htm">ReadException</a></td><td><div class="summary">
            Occurs when asynchronous read throws an exception.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="3dde8935-f14c-70ba-338a-a0a13a3fce83.htm">ReadGivenStartStop(Int32)</a></td><td><div class="summary">
            Utility function to implement Read given working StartReading and StopReading methods
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="43bc1216-9599-f69d-47db-67ac76ae56fc.htm">ReadTagMemBytes(TagFilter, Int32, Int32, Int32)</a></td><td><div class="summary">
            Read data from the memory bank of a tag. 
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="d6d339b8-abd3-706f-50ad-969d19ab3286.htm">ReadTagMemBytes(TagFilter, Int32, Int32, Int32)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f05a4b9c-3280-c048-a3df-b5bfb169fd59.htm">ReadTagMemWords(TagFilter, Int32, Int32, Int32)</a></td><td><div class="summary">
            Read data from the memory bank of a tag.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="3ae1ea14-363e-e455-1d8d-a8261cdad736.htm">ReadTagMemWords(TagFilter, Int32, Int32, Int32)</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/privmethod.gif" /></td><td><a href="c163d6dc-7d32-05ae-76e5-61b5c2102cee.htm">ReadTagMemWordsGivenReadTagMemBytes(TagFilter, Int32, Int32, Int32)</a></td><td><div class="summary">
            Implement ReadTagMemWords in terms of ReadTagMemBytes
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d64c0127-695d-06de-a23c-6c67a1c313a5.htm">Reboot<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Reboots the reader device
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="6db968f8-ec1d-506c-435b-db68308d7b81.htm">Reboot<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="52504355-1945-baf4-0b73-b0d702373b52.htm">SetComPort(String)</a></td><td><div class="summary">
            Select serial port
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="bb3be3fa-c839-bfcc-8bb3-6b5f18d176e4.htm">setGPIODirection(Boolean, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</a></td><td><div class="summary">
             Set directions of all GPIO pins
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2e3afd5d-18cb-af26-0e1e-3c54b8797ce7.htm">SetSerialBaudRate(Int32)</a></td><td><div class="summary">
             Set the baud rate of the serial port in use.  
            
             NOTE: This is a low-level command and should only be used in
             conjunction with CmdSetBaudRate() or CmdBootBootloader()
             below. For changing the rate used by the API in general, see the
             "/reader/baudRate" parameter.
             </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f1a70819-c8a6-468b-a8f9-335f569fd13f.htm">SimpleTransportListener(Object, TransportListenerEventArgs)</a></td><td><div class="summary">
            Simple console-output transport listener
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="023be2c2-fcbe-fc5c-218e-6c8f385ecc12.htm">SimpleTransportListener(Object, TransportListenerEventArgs)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="37338776-b4c5-254b-cb60-a87d21c7d957.htm">StartReading<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Start reading RFID tags in the background. The tags found will be
            passed to the registered read listeners, and any exceptions that
            occur during reading will be passed to the registered exception
            listeners. Reading will continue until stopReading() is called.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="a9ed984e-287e-0271-05eb-7820fb65f2e5.htm">StartReading<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="48c491f6-f533-c40b-861b-4134428be58b.htm">StartReadingGivenRead<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Utility function to implement StartReading given a working Read method
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="1cd80ab0-5381-dc30-7852-786353159567.htm">statFlag</a></td><td><div class="summary">
            Cache reader stats flag
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="event; public; instance; inherited"><td><img src="../icons/pubevent.gif" /></td><td><a href="608dd535-9dd2-8f07-4bdb-57465ebb8253.htm">StatsListener</a></td><td><div class="summary">
            Occurs when reader status parsing in continuous read 
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="event; public; instance; inherited"><td><img src="../icons/pubevent.gif" /></td><td><a href="01fedac5-5012-232b-edf2-f307d5d8fdb6.htm">StatusListener</a></td><td><div class="summary">
            Occurs when reader status parsing in continuous read 
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="8e261fe0-5549-c341-ddeb-bdce4e6d0665.htm">StopReading<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Stop reading RFID tags in the background.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="7691b62d-632a-a3dc-1114-917169bb7728.htm">StopReading<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="a6213d7d-caff-3db8-fd3a-c67bba682567.htm">StopReadingGivenRead<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Utility function to implement StopReading given a working Read method
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="event; public; instance; inherited"><td><img src="../icons/pubevent.gif" /></td><td><a href="54c89314-3e0c-8c03-6183-e4a458bb2ed8.htm">TagRead</a></td><td><div class="summary">
            Occurs when each tag is read.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="8a96b225-0aed-5827-773f-ac06b29e97f4.htm">timeEnd</a></td><td><div class="summary">
            Get the time elapsed for processing the tagread data
             </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="b249bd2f-b4ba-af81-808a-e86843a62cd5.htm">timeStart</a></td><td><div class="summary">
            Get the time elapsed for processing the tagread data
             </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="59222380-c48c-6389-1a6b-e49a76f38d17.htm">ToSL900aTime(DateTime)</a></td><td><div class="summary">
            Convert DateTime to SL900A time
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
                    Returns a <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> that represents the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.
                </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="event; public; instance; inherited"><td><img src="../icons/pubevent.gif" /></td><td><a href="d85b8f53-9cef-c284-3fff-be6709dc1892.htm">Transport</a></td><td><div class="summary">
            Transport message was sent or received
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="field; protected; instance; inherited"><td><img src="../icons/protfield.gif" /></td><td><a href="86420850-0b63-4260-1389-002d48c13b50.htm">userTransportTimeoutEnable</a></td><td><div class="summary">
            In case user specified the timeout value for connect
            Enable the userTransportTimeoutEnable option
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="c993be24-9a64-86e5-7bc2-af9967460b4c.htm">ValidateParameterKey(String)</a></td><td><div class="summary">
            Check for existence of parameter.  Throw exception if parameter does not exist.
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="e7926d19-6d67-96a5-911f-e1385721ad5d.htm">ValidateProtocol(TagProtocol)</a></td><td><div class="summary">
            Is requested protocol a valid protcol?
            </div> (Inherited from <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="01314431-dae3-db5e-79eb-5587aba55c4d.htm">WriteTag(TagFilter, TagData)</a></td><td><div class="summary">
            Write a new ID to a tag.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="6681a193-1127-381f-7f84-7512c004adbd.htm">WriteTag(TagFilter, TagData)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5ee8c9e5-0f9a-6ad8-94fb-cf438c7397bd.htm">WriteTagMemBytes(TagFilter, Int32, Int32, ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Write data to the memory bank of a tag.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="95268e18-54bd-937a-feaa-f99ddea828f6.htm">WriteTagMemBytes(TagFilter, Int32, Int32, ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>Byte<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2833e752-4be9-9fcb-6868-abd08fdd8f1b.htm">WriteTagMemWords(TagFilter, Int32, Int32, ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>UInt16<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Write data to the memory bank of a tag.
            </div> (Overrides <a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a>.<a href="da9887fd-9796-ad2e-3064-ec50b6cfb88b.htm">WriteTagMemWords(TagFilter, Int32, Int32, ICollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>UInt16<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a>.)<br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="4"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td colspan="3"><a href="ad285ce5-64ed-2426-185c-bcc332ca509a.htm">Disposable</a></td></tr><tr><td> </td><td><img src="../icons/LastChild.gif" /></td><td colspan="2"><a href="9a8bf2e6-b158-4467-a1db-040f0990f32d.htm">Reader</a></td></tr><tr><td> </td><td> </td><td><img src="../icons/LastChild.gif" /></td><td><span class="selflink">SerialReader</span></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40thingmagic.com?Subject=Mercury API">support@thingmagic.com</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>Assembly: <span sdata="assembly">MercuryAPI</span> (Module: MercuryAPI) Version: 1.23.0.20 (1.23.0.20)</p></div></body></html>